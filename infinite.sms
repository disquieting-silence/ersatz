diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index a03636a..42ae8b2 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -38,6 +38,12 @@
                        android:resource="@xml/widget_info" />
         </receiver>
 
+        <receiver android:name=".location.LocationReceiver">
+            <intent-filter>
+                <action android:name="dsq.ersatz.location_update"/>
+            </intent-filter>
+        </receiver>
+
         <activity android:name=".screens.main.MainFrame"
                   android:label="@string/app_name">
             <intent-filter>
diff --git a/src/dsq/ersatz/location/DefaultLocationSender.java b/src/dsq/ersatz/location/DefaultLocationSender.java
index 47b209a..f0e6da0 100644
--- a/src/dsq/ersatz/location/DefaultLocationSender.java
+++ b/src/dsq/ersatz/location/DefaultLocationSender.java
@@ -9,22 +9,21 @@ import dsq.ersatz.db.riposte.Riposte;
 import dsq.ersatz.requests.Requests;
 
 public class DefaultLocationSender implements LocationSender {
-    private final LocationReceiver locations = new LocationReceiver();
 
     // FIX 26/12/12 There could be some logic here to only fetch the location when it is out-of-date.
     public void send(final Context context, final Riposte riposte, final String number) {
-        final IntentFilter filter = new IntentFilter();
-        filter.addAction(LocationReceiver.LOCATION_UPDATE);
-        context.registerReceiver(locations, filter);
         final PendingIntent pendingIntent = setupIntent(context, number, riposte);
         final LocationManager locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
         locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, pendingIntent);
     }
 
     private PendingIntent setupIntent(final Context context, final String number, final Riposte riposte) {
-        final Intent intent = new Intent();
+        final Intent intent = new Intent(LocationReceiver.LOCATION_UPDATE);
         intent.putExtra(LocationReceiver.LOCATION_NUMBER, number);
-        intent.putExtra(LocationReceiver.LOCATION_RIPOSTE, riposte);
-        return PendingIntent.getBroadcast(context, Requests.PENDING_LOCATION, intent, 0);
+        intent.putExtra(LocationReceiver.LOC_RIPOSTE_ID, riposte.id);
+        intent.putExtra(LocationReceiver.LOC_RIPOSTE_NAME, riposte.name);
+        intent.putExtra(LocationReceiver.LOC_RIPOSTE_MESSAGE, riposte.message);
+        intent.putExtra(LocationReceiver.LOC_RIPOSTE_TARGET_ID, riposte.targetId);
+        return PendingIntent.getBroadcast(context, Requests.PENDING_LOCATION, intent, PendingIntent.FLAG_CANCEL_CURRENT);
     }
 }
diff --git a/src/dsq/ersatz/location/LocationReceiver.java b/src/dsq/ersatz/location/LocationReceiver.java
index 98a5622..78cecdd 100644
--- a/src/dsq/ersatz/location/LocationReceiver.java
+++ b/src/dsq/ersatz/location/LocationReceiver.java
@@ -7,6 +7,7 @@ import android.content.Intent;
 import android.location.Location;
 import android.location.LocationManager;
 import android.os.Bundle;
+import android.util.Log;
 import dsq.ersatz.db.riposte.Riposte;
 import dsq.ersatz.requests.Requests;
 import dsq.ersatz.sms.*;
@@ -14,28 +15,43 @@ import dsq.ersatz.sms.*;
 public class LocationReceiver extends BroadcastReceiver {
 
     public static final String LOCATION_UPDATE = "dsq.ersatz.location_update";
-    public static final String LOCATION_RIPOSTE = "LOCATION_RIPOSTE";
+    public static final String LOC_RIPOSTE_ID = "LOC_RIPOSTE_ID";
+    public static final String LOC_RIPOSTE_NAME = "LOC_RIPOSTE_NAME";
+    public static final String LOC_RIPOSTE_MESSAGE = "LOC_RIPOSTE_MESSAGE";
+    public static final String LOC_RIPOSTE_TARGET_ID = "LOC_RIPOSTE_TARGET_ID";
     public static final String LOCATION_NUMBER = "LOCATION_NUMBER";
+    public static final String SENDER = "dsq.ersatz.location.send";
 
     private final TemplateSender sender = new DefaultTemplateSender();
 
     @Override
     public void onReceive(final Context context, final Intent intent) {
+        Log.v("ERSATZ", "Action: " + intent.getAction());
         final String action = intent.getAction();
         if (action.equals(LOCATION_UPDATE)) sendMessage(context, intent);
     }
 
     private void sendMessage(final Context context, final Intent intent) {
         final Bundle extras = intent.getExtras();
-        final Riposte riposte = (Riposte)extras.get(LOCATION_RIPOSTE);
+        final Riposte riposte = extract(extras);
         final String number = extras.getString(LOCATION_NUMBER);
+        Log.v("ERSATZ", String.valueOf(extras.keySet()));
         final Location loc = (Location) extras.get(LocationManager.KEY_LOCATION_CHANGED);
-        final Bundle templates = template(loc);
-        sender.send(context, riposte, number, templates);
-        context.unregisterReceiver(this);
+        if (loc != null) {
+            final Bundle templates = template(loc);
+            sender.send(context, riposte, number, templates);
+        }
         stopUpdates(context, intent);
     }
 
+    private Riposte extract(final Bundle extras) {
+        final long riposteId = extras.getLong(LOC_RIPOSTE_ID);
+        final String riposteName = extras.getString(LOC_RIPOSTE_NAME);
+        final String riposteMessage = extras.getString(LOC_RIPOSTE_MESSAGE);
+        final long targetId = extras.getLong(LOC_RIPOSTE_TARGET_ID);
+        return new Riposte(riposteId, riposteName, riposteMessage, targetId);
+    }
+
     private void stopUpdates(final Context context, final Intent intent) {
         //http://stackoverflow.com/questions/3031630/android-how-to-cancel-a-request-of-location-update-with-intent/3032556#3032556
         final LocationManager locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
